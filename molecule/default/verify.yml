---
- name: Verify
  hosts: all
  gather_facts: true
  become: true
  pre_tasks:
    - name: Install jc command
      ansible.builtin.apt:
        update_cache: true
        name: jc
      when:
        - ansible_facts.distribution == 'Debian'
        - ansible_facts.distribution_major_version == '11'
    - name: Install jc command
      when:
        - ansible_facts.distribution == 'Debian'
        - ansible_facts.distribution_major_version == '10'
      block:
        - name: Install pip package
          ansible.builtin.apt:
            name: python3-pip
        - name: Install jc
          ansible.builtin.pip:
            executable: /usr/bin/pip3
            name: jc
  tasks:
    ## パッケージのテスト
    - name: Gather package facts
      ansible.builtin.package_facts:
        manager: auto
    - name: Assert package
      ansible.builtin.assert:
        that:
          - ansible_facts.packages['etckeeper'] is defined
          - ansible_facts.packages['ufw'] is defined
          - ansible_facts.packages['fail2ban'] is defined
    ## ユーザーのテスト
    - name: Gather group facts
      ansible.builtin.shell:
        cmd: cat /etc/shadow | jc --shadow
      changed_when: false
      register: user_result
    - name: Set user variable
      ansible.builtin.set_fact:
        registerd_users: "{{ user_result.stdout | from_json | map(attribute='username') }}"
    - name: Assert user
      ansible.builtin.assert:
        that:
          - "'simple' in registerd_users"
          - "'disable_acount' in registerd_users"
          - "'full_set' in registerd_users"
    ## グループのテスト
    - name: Gather group facts
      ansible.builtin.shell:
        cmd: cat /etc/group | jc --group
      changed_when: false
      register: group_result
    - name: Set group variable
      ansible.builtin.set_fact:
        registerd_groups: "{{ group_result.stdout | from_json | map(attribute='group_name') }}"
    - name: Assert group
      ansible.builtin.assert:
        that:
          - "'adm' in registerd_groups"
    # ファイルのテスト
    - name: Check sshfilter script
      ansible.builtin.stat:
        path: /usr/local/bin/sshfilter
      register: result
    - name: Assert file
      ansible.builtin.assert:
        that:
          - result.stat.exists
          - not result.stat.isdir
          - result.stat.executable
    - name: Check backup script directory
      ansible.builtin.stat:
        path: /backup/scripts
      register: result
    - name: Assert file
      ansible.builtin.assert:
        that:
          - result.stat.exists
          - result.stat.isdir
    - name: Check backup data directory
      ansible.builtin.stat:
        path: /backup/data
      register: result
    - name: Assert file
      ansible.builtin.assert:
        that:
          - result.stat.exists
          - result.stat.isdir
    ## サービスのテスト
    - name: Populate service facts
      ansible.builtin.service_facts:
    - name: Assert service(fail2ban)
      ansible.builtin.assert:
        that:
          - ansible_facts.services['fail2ban.service']
          - ansible_facts.services['fail2ban.service']['state'] == 'running'
          - ansible_facts.services['fail2ban.service']['status'] == 'enabled'
    - name: Assert service(ufw)
      ansible.builtin.assert:
        that:
          - ansible_facts.services['ufw.service']
          - ansible_facts.services['ufw.service']['status'] == 'enabled'
    - name: Assert service(etckeeper)
      ansible.builtin.assert:
        that:
          - ansible_facts.services['etckeeper.service']
